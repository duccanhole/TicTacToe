{"ast":null,"code":"var _jsxFileName = \"D:\\\\web-learn\\\\react\\\\app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  //make square on board\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    //render square\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    //render board\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction findWinner(squares) {\n  const lines = [//check posion\n  [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [0, 4, 8], [1, 4, 7], [2, 4, 6], [2, 5, 8]];\n\n  for (let x of lines) {\n    const [a, b, c] = x;\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      //return winner if 3 positon of lines are same value\n      return squares[a];\n    }\n  }\n\n  return null;\n} //=======================================================================\n//Game will control Board component \n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xNext: true\n    };\n  } //add click event, its will appear X when click\n\n\n  handleClick(i) {\n    const squares = this.state.squares.slice(); //check next move is X or O\n\n    squares[i] = this.state.xNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      //set check function\n      xNext: !this.state.xNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = findWinner(current.squares);\n    let status; //check winner or keep move\n\n    status = winner ? 'Winner: ' + winner : 'Next move: ' + (this.state.xNext ? 'X' : 'O');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => this.handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 108,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["D:/web-learn/react/app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","status","findWinner","lines","x","a","b","c","Game","constructor","state","history","Array","fill","xNext","handleClick","slice","setState","current","length","winner","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction Square(props) {\r\n    //make square on board\r\n    return (\r\n        <div className=\"square\" onClick={props.onClick}>{props.value}</div>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        //render square\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />);\r\n    }\r\n    render() {\r\n        //render board\r\n        return (\r\n            <div className=\"board\">\r\n                <h4 className=\"status\">{status}</h4>\r\n                <div className=\"row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction findWinner(squares) {\r\n    const lines = [\r\n        //check posion\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [0, 4, 8], [1, 4, 7], [2, 4, 6], [2, 5, 8],\r\n    ];\r\n    for (let x of lines) {\r\n        const [a, b, c] = x;\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            //return winner if 3 positon of lines are same value\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n//=======================================================================\r\n\r\n//Game will control Board component \r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                { squares: Array(9).fill(null), }\r\n            ],\r\n            xNext: true,\r\n        }\r\n    }\r\n    //add click event, its will appear X when click\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        //check next move is X or O\r\n        squares[i] = this.state.xNext ? 'X' : 'O';\r\n        this.setState({\r\n            squares: squares,\r\n            //set check function\r\n            xNext: !this.state.xNext,\r\n\r\n        });\r\n    }\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        const winner = findWinner(current.squares);\r\n        let status;\r\n        //check winner or keep move\r\n        status = winner ? ('Winner: ' + winner) : 'Next move: ' + (this.state.xNext ? 'X' : 'O');\r\n        return (\r\n            <div>\r\n                <Board\r\n                    squares={current.squares}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                />\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\nReactDOM.render(<Game />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}