{"ast":null,"code":"var _jsxFileName = \"D:\\\\web-learn\\\\react\\\\app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  //make square on board\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    //render square\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    //render board\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction findWinner(squares) {\n  const lines = [//check posion\n  [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [0, 4, 8], [1, 4, 7], [2, 4, 6], [2, 5, 8]];\n\n  for (let x of lines) {\n    const [a, b, c] = x;\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      //return winner if 3 positon of lines are same value\n      return squares[a];\n    }\n  }\n\n  return null;\n} //=======================================================================\n//Game will control Board component \n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xNext: true,\n      stepNum: 0\n    };\n  }\n\n  jumpTo(step) {\n    this.setState = {\n      stepNum: step,\n      xNext: step % 2 === 0\n    };\n  } //add click event\n\n\n  handleClick(i) {\n    //add history off move\n    const history = this.state.history.slice(0, this.state.stepNum + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice(); //stop move when one player win or all square are filled\n\n    if (findWinner(squares) || squares[i]) return; //check next move is X or O\n\n    squares[i] = this.state.xNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNum: history.length,\n      //set check function\n      xNext: !this.state.xNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNum];\n    const winner = findWinner(current.squares); //display move history\n\n    const moves = history.map((step, move) => {\n      //------------ !? --------------------\n      const decs = move ? 'Go to move: ' + move : 'Go to start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn-secondary\",\n          onClick: () => this.jumpTo(move),\n          children: decs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    });\n    let status; //display status check winner or keep move\n\n    status = winner ? 'Winner: ' + winner : 'Next move: ' + (this.state.xNext ? 'X' : 'O');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: moves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["D:/web-learn/react/app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","findWinner","lines","x","a","b","c","Game","constructor","state","history","Array","fill","xNext","stepNum","jumpTo","step","setState","handleClick","slice","current","length","concat","winner","moves","map","move","decs","status","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction Square(props) {\r\n    //make square on board\r\n    return (\r\n        <div className=\"square\" onClick={props.onClick}>{props.value}</div>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        //render square\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />);\r\n    }\r\n    render() {\r\n        //render board\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction findWinner(squares) {\r\n    const lines = [\r\n        //check posion\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [0, 4, 8], [1, 4, 7], [2, 4, 6], [2, 5, 8],\r\n    ];\r\n    for (let x of lines) {\r\n        const [a, b, c] = x;\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            //return winner if 3 positon of lines are same value\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n//=======================================================================\r\n\r\n//Game will control Board component \r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                { squares: Array(9).fill(null), }\r\n            ],\r\n            xNext: true,\r\n            stepNum: 0,\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        this.setState = ({\r\n            stepNum: step,\r\n            xNext: (step%2)===0,\r\n        });\r\n    }\r\n    //add click event\r\n    handleClick(i) {\r\n        //add history off move\r\n        const history = this.state.history.slice(0,this.state.stepNum+1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        //stop move when one player win or all square are filled\r\n        if (findWinner(squares) || squares[i]) return;\r\n        //check next move is X or O\r\n        squares[i] = this.state.xNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNum: history.length,\r\n            //set check function\r\n            xNext: !this.state.xNext,\r\n\r\n        });\r\n    }\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNum];\r\n        const winner = findWinner(current.squares);\r\n        //display move history\r\n        const moves = history.map((step, move) => {\r\n            //------------ !? --------------------\r\n            const decs = move ?\r\n                'Go to move: ' + move :\r\n                'Go to start';\r\n            return (\r\n                <li>\r\n                    <button type=\"button\" class=\"btn-secondary\" onClick={() => this.jumpTo(move)}>{decs}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        //display status check winner or keep move\r\n        status = winner ? ('Winner: ' + winner) : ('Next move: ' + (this.state.xNext ? 'X' : 'O'));\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"board\">\r\n                    <h4>{status}</h4>\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"history\">\r\n                    <ul><li>{moves}</li></ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\nReactDOM.render(<Game />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}